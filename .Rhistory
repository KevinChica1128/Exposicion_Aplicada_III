for (i in 1:8) {
fr=c(fr,rep(tr[i],2))
}
#extraccion de los datos matriz fraccionada
nueva=datos4
j=c()
for (i in 1:length(fr)) {
if(fr[i]!=1){
j=c(j,i)
}
nueva=datos4[-j,]
}
colnames(nueva)=c("H","J","K","O")
#MODELO FACTORIAL
mod6<-lm(O~H+J+K, data=nueva)
anova(mod6)
levels.design1 = c(2,2,2,2)
f.design1 <- gen.factorial(levels.design1)
str(f.design1)
#vector con los signos de la interaccion ABC
tr1=c(f.design1$X1*f.design1$X2*f.design1$X3*f.design1$X4)
tr1
#extraccion de los datos matriz fraccionada
nueva1=Tabla
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva=Tabla[-j,]
}
data.frame[Tabla]
#extraccion de los datos matriz fraccionada
nueva1=data.frame[Tabla$A,Tabla$B,Tabla$C,Tabla$D,Tabla$filtracion]
Tabla$A
Tabla$A[1]
Tabla$A$attr
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva=Tabla[-j,]
}
datos2
tr1
datos4
str(datos4)
str(datos2)
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva=Tabla[-j,]
}
colnames(nueva)=c("A","B","C","D")
nueva
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva1=Tabla[-j,]
}
colnames(nueva1)=c("A","B","C","D")
nueva1
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva1=Tabla[-j,]
}
colnames(nueva1)=c("A","B","C","D")
nueva1
levels.design = c(2,2,2)
f.design <- gen.factorial(levels.design)
str(f.design)
#vector con los signos de la interaccion ABC
tr=c(f.design$X1*f.design$X2*f.design$X3)
#cuando se tienen replicas
fr=c()
for (i in 1:8) {
fr=c(fr,rep(tr[i],2))
}
#extraccion de los datos matriz fraccionada
nueva=datos4
j=c()
for (i in 1:length(fr)) {
if(fr[i]!=1){
j=c(j,i)
}
nueva=datos4[-j,]
}
colnames(nueva)=c("H","J","K","O")
nueva
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva1=datos2[-j,]
}
colnames(nueva1)=c("A","B","C","D")
nueva1
nueva1
datos2
#extraccion de los datos matriz fraccionada
nueva1=datos2
nueva1
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva1=datos2[-j,]
}
colnames(nueva1)=c("A","B","C","D")
nueva1
j
datos2
tr1
f.design1
f.design1 <- gen.factorial(levels.design1,factors = "+")
f.design1 <- gen.factorial(levels.design1)
str(f.design1)
f.design1
f.design1 <- gen.factorial(levels.design1)
f.design1
for (i in 1:16) {
for (j in 1:4) {
if(f.design1[i,j]="1"){
f.design1="+"
}
if(f.design1="-1"){
f.design1="-"
}
}
}
for (i in 1:16) {
for (j in 1:4) {
if(f.design1[i,j]=="1"){
f.design1[i,j]=="+"
}
if(f.design1[i,j]=="-1"){
f.design1[i,j]=="-"
}
}
}
1:16
f.design1
f.design1 <- gen.factorial(levels.design1)
f.design1
f.design1$X1
for (i in 1:16) {
for (j in 1:4) {
if(f.design1[i,j]=="1"){
f.design1[i,j]=="+"
}
if(f.design1[i,j]=="-1"){
f.design1[i,j]=="-"
}
}
}
f.design1
f.design1 <- gen.factorial(levels.design1)
str(f.design1)
datos4
datos2
#extraccion de los datos matriz fraccionada
nueva1=datos2
nueva1
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=="+"){
j=c(j,i)
}
nueva1=datos2[-j,]
}
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!="+"){
j=c(j,i)
}
nueva1=datos2[-j,]
}
nueva1
#Diseño factorial completo con una sola replica.
#Ingresamos los datos
A<-c(rep(c("0","1"),8))
B<-c(rep(c("0","0","1","1"),4))
C<-c(rep(c(rep("0",4),rep("1",4)),2))
D<-c(rep("0",8),rep("1",8))
filtracion<-c(45,71,48,65,68,60,80,65,43,100,45,104,75,86,70,96)
datos2=data.frame(A,B,C,D,filtracion)
str(datos2)
head(datos2)
datos2
mod3<-lm(filtracion~A+C+D+A:C+A:D+C:D+A:C:D, data=datos2)
anova(mod3)
Tabla <- FrF2(nruns = 16,
nfactors = 4,
factor.names = list(A=c("0","1"),
B=c("0","1"),
C=c("0","1"),
D=c("0","1")),
replications = 1, randomize = F)
Tabla <- add.response(design = Tabla, response = filtracion)
Tabla
x11()
DanielPlot(Tabla)
# Gráfica de interacción triple
filtracion1<-filtracion[1:8]
A1<-A[1:8]
B1<-B[1:8]
C1<-C[1:8]
filtracion2<-filtracion[9:16]
A2<-A[9:16]
B2<-B[9:16]
C2<-C[9:16]
x11()
par(mfrow=c(1,2))
cubePlot(obj = filtracion1,
eff1 = A1,
eff2 = B1,
eff3 = C1,
main = " Gráfica de interacción triple con factor D bajo")
cubePlot(obj = filtracion2,
eff1 = A2,
eff2 = B2,
eff3 = C2,
main = " Gráfica de interacción triple con factor D alto",round = -1)
levels.design1 = c(2,2,2,2)
f.design1 <- gen.factorial(levels.design1)
str(f.design1)
#vector con los signos de la interaccion ABC
tr1=c(f.design1$X1*f.design1$X2*f.design1$X3*f.design1$X4)
#extraccion de los datos matriz fraccionada
nueva1=datos2
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
colnames(nueva1)=c("A","B","C","D")
nueva1
datos4
str(datos4)
str(datos2)
#vector con los signos de la interaccion ABC
tr1=c(f.design1$X1*f.design1$X2*f.design1$X3*f.design1$X4)
tr1
tr1[i]!=1
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
datos2
length(tr1)
j
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
j
j<-c()
#extraccion de los datos matriz fraccionada
nueva1=datos2
j<-c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
j
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
tr1
#extraccion de los datos matriz fraccionada
nueva1=datos2
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(i)
}
nueva1=datos2[-j,]
}
j
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
nueva1=datos2[-j,]
}
j
#extraccion de los datos matriz fraccionada
j=c()
for (i in 1:length(tr1)) {
if(tr1[i]!=1){
j=c(j,i)
}
#nueva1=datos2[-j,]
}
nueva1=datos2[-j,]
nueva1
colnames(nueva1)=c("A","B","C","D","O")
nueva1
datos2
tr1
nueva1
x11()
DanielPlot(nueva1)
str(Tabla)
str(nueva1)
Tabla
Tabla[2,]
j
Tabla2=Tabla[-c(2,3,5,8,9,12,14,15),]
Tabla2
x11()
DanielPlot(Tabla2)
model.tables(mod3)
summary(mod3)
mod3<-lm(filtracion~A*B*C*D, data=datos2)
anova(mod3)
summary(mod3) #Estimación de los efectos
mod3<-lm(filtracion~-1+A*B*C*D, data=datos2)
summary(mod3) #Estimación de los efectos
mod3<-lm(filtracion~0+A*B*C*D, data=datos2)
anova(mod3)
summary(mod3) #Estimación de los efectos
Tabla2
Tabla
x11()
DanielPlot(Tabla2)
Efectos<-c(19,1.5,14,16.5,-1,-18.5,19)
qqnorm(Efectos)
#Análisis método de Daniel
Efectos0<-c(21.625,3.125,9.875,14.625,0.125,-18.125,16.625,2.375,-0.375,
-1.125,1.875,4.125,-1.625,-2.625,1.375)
qqnorm(Efectos0)
x11()
DanielPlot(Tabla)
qqnorm(Efectos0)
qqline(Efectos0)
x11()
qqnorm(Efectos0)
qqline(Efectos0)
x11()
DanielPlot(Tabla)
DanielPlot()
DanielPlot?
bdfhs
DanielPlot
#Gráfico efectos principales
MEPlot(Tabla2, lwd = 2)
x11()
Efectos <- data.frame(FA,FB,FC,Respuesta)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Respuesta", xlab="Factor")
x11()
Efectos <- data.frame(H,J,K,O)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Vida Util", xlab="Factor")
Efectos <- data.frame(H,J,K,O)
#vector con los signos de la interaccion ABC
tr=c(f.design$X1*f.design$X2*f.design$X3)
#cuando se tienen replicas
fr=c()
for (i in 1:8) {
fr=c(fr,rep(tr[i],2))
}
#extraccion de los datos matriz fraccionada
nueva=datos4
j=c()
for (i in 1:length(fr)) {
if(fr[i]!=1){
j=c(j,i)
}
nueva=datos4[-j,]
}
colnames(nueva)=c("H","J","K","O")
#MODELO FACTORIAL
mod6<-lm(O~H+J+K, data=nueva)
anova(mod6)
x11()
Efectos <- data.frame(H,J,K,O)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Vida Util", xlab="Factor")
Efectos <- data.frame(H,J,K,O)
x11()
qqnorm(Efectos0)
qqline(Efectos0)
x11()
DanielPlot(Tabla)
dnorm(21.625)
pnorm(21.625)
scale(Efectos0)
scale(Efectos0,center = T)
qnorm(1.92)
dnorm(1.92)
x11()
plot(Efectos0,scale(Efectos0))
x11()
plot(Efectos0,scale(Efectos0))
x11()
DanielPlot(Tabla)
x11()
qqnorm(Efectos0)
qqline(Efectos0)
x11()
qqnorm(Efectos0, plot.it = T)
qqline(Efectos0)
?qqnorm
x11()
qqnorm(Efectos)
qqline(Efectos)
Efectos<-c(19,1.5,14,16.5,-1,-18.5,19)
x11()
qqnorm(Efectos)
qqline(Efectos)
x11()
qqnorm(Efectos)
qqline(Efectos)
text(Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(1.5,-0.3,0,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(1.5,-0.3,0,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
DanielPlot(Tabla)
x11()
qqnorm(Efectos)
qqline(Efectos)
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(1.5,-0.3,0,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,0,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.1,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.07,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.07,0.4,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.07,0.42,-0.7,-1.3,1.3),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.07,0.42,-0.7,-1.3,1.27),Efectos,c("A","B","C","D","AB","AC","AD"))
x11()
qqnorm(Efectos)
qqline(Efectos)
text(c(0.7,-0.3,-0.07,0.42,-0.68,-1.28,1.27),Efectos,c("A","B","C","D","AB","AC","AD"))
citation("R")
citation()
citation("AlgDesign")
citation("FrF2")
