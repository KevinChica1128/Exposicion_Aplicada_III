#Datos (Ejemplo mongomery)
Material=c(rep("1",12),rep("2",12),rep("3",12))
Temperatura=c(rep(c(rep("15",4),rep("70",4),rep("125",4)),3))
Vida=c(130,155,75,180,34,40,80,75,20,70,82,58,150,188,159,126,136,122,106,115,25,70,58,45,138,110,168,160,174,120,150,139,96,104,82,60)
datos=data.frame(Material,Temperatura,Vida)
str(datos)
head(datos)
#Descriptivas
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", main=" GrÃ¡fica de efectos principales", ylab= "Vida Util", xlab="Factor")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Vida Util", xlab="Factor")
x11()
interaction.plot(Material, Temperatura, Vida)
x11()
interaction.plot( Temperatura,Material, Vida)
#MODELO FACTORIAL
mod<-lm(Vida~Material+Temperatura+Material:Temperatura, data=datos)
anova(mod)
#Como existe interaccion hacemos:
#Pruebas de Comparaciones MÃºltiple (Pruebas Postanova)
library(multcompView)
library(lsmeans)
#Material/Temperatura
leastsquare1 = lsmeans(mod, ~Material|Temperatura,  adjust="tukey")
cld(leastsquare1, alpha=.05, Letters=letters)
#Temperatura/Material
leastsquare2 = lsmeans(mod, ~Temperatura|Material,  adjust="tukey")
cld(leastsquare2, alpha=.05, Letters=letters)
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Vida Util", xlab="Factor")
x11()
interaction.plot(Material, Temperatura, Vida)
x11()
interaction.plot( Temperatura,Material, Vida)
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
head(datos)
View(datos)
#Descriptivas
library(ggplot2)
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
x11()
p + scale_x_discrete(name="Agente soldante",
labels=c("1.125","2.125","3.125","1.15","2.15","3.15","1.70","2.70","3.70")) + labs(y="Fuerza(1000lb/plg^2)") +
stat_summary(fun.y=mean, colour="red", geom="point", shape=19, size=2)
p<-ggplot(datos, aes(Vida, Material*Temperatura)) + geom_point()
x11()
p + scale_x_discrete(name="Agente soldante",
labels=c("1.125","2.125","3.125","1.15","2.15","3.15","1.70","2.70","3.70")) + labs(y="Fuerza(1000lb/plg^2)") +
stat_summary(fun.y=mean, colour="red", geom="point", shape=19, size=2)
p<-ggplot(datos, aes( Material*Temperatura,Vida)) + geom_point()
x11()
p + scale_x_discrete(name="Agente soldante",
labels=c("1.125","2.125","3.125","1.15","2.15","3.15","1.70","2.70","3.70")) + labs(y="Vida(en horas) bateria") +
stat_summary(fun.y=mean, colour="red", geom="point", shape=19, size=2)
Material*Temperatura
aes( Material*Temperatura)
str(datos)
X11()
plot(Vida~Material*Temperatura, ylab="Vida Util")
datos
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util",main="Gráfica de cajas de la vida de las baterías por interacciones")
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util",main="Vida de las baterías por interacciones")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", main=" Gráfica de efectos principales", ylab= "Vida Util", xlab="Factor")
x11()
parmfrow=c(1,2)
interaction.plot(Material, Temperatura, Vida)
interaction.plot( Temperatura,Material, Vida)
#Grafico de interacciones
parmfrow=c(1,2)
x11()
interaction.plot(Material, Temperatura, Vida)
interaction.plot( Temperatura,Material, Vida)
#Grafico de interacciones
par(mfrow=c(1,2))
x11()
interaction.plot(Material, Temperatura, Vida)
interaction.plot( Temperatura,Material, Vida)
par(mfrow=c(1,2))
x11()
interaction.plot(Material, Temperatura, Vida)
interaction.plot( Temperatura,Material, Vida)
#Grafico de interacciones
par(mrow=c(1,2))
x11()
par(mfrow=c(1,2))
interaction.plot(Material, Temperatura, Vida)
interaction.plot( Temperatura,Material, Vida)
x11()
interaction.plot( Temperatura,Material, Vida)
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", ylab= "Vida Util", xlab="Factor")
X11()
boxplot(Vida~Material*Temperatura, ylab="Vida Util")
x11()
Efectos <- data.frame(Material, Temperatura, Vida)
plot.design(Efectos, fun="mean", ylab= "Vida Util", xlab="Factor")
x11()
interaction.plot( Temperatura,Material, Vida,main="")
x11()
interaction.plot( Temperatura,Material, Vida)
#DISEÑO FACTORIAL FRACCIONADO
install.packages("AlgDesign")
library("AlgDesign")
levels.design = c(3,3)
f.design <- gen.factorial(levels.design)
fract.design <- optFederov(
data=f.design,
nTrials=sum(levels.design),
approximate=TRUE)
#me saca la fraccion del diseño
potDgn=optFederov(mod,data = datos,nTrials = 18)#el trial es el numero de datos que quiero
potDgn
#fraccion de diseño
potDgn$design
#MODELO FACTORIAL fraccionado
mod2<-lm(Vida~Material+Temperatura+Material:Temperatura, data=potDgn$design)
anova(mod2)
